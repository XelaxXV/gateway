stages:
  - lints
  - test
  - build_base
  - build

format:
  image: rustlang/rust
  stage: lints
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

clippy:
  image: rustlang/rust
  stage: lints
  script:
    - rustup component add clippy
    - cargo clippy --all -- -D warnings

test:
  image: rustlang/rust:nightly
  stage: test
  script:
    - cargo test

docker_build_base:
  image: docker:latest
  stage: build_base
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:base_$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE:base_$CI_COMMIT_REF_SLUG" -f Dockerfile_base .
    - docker push "$CI_REGISTRY_IMAGE:base_$CI_COMMIT_REF_SLUG"

docker_build:
  image: docker:latest
  stage: build
  needs: ["docker_build_base"]
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg BRANCH=${CI_COMMIT_BRANCH} .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
